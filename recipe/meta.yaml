{% set version = "1.78.0" %}

package:
  name: rust-split
  version: {{ version }}

source:
  # Note! This source file specification is structured specifically to interact
  # well with the autotick bot. Importantly, the `patches:` block actually
  # applies to *all* of these inputs, not just the last one in the list, because
  # of the way that the YAML selector processing works.
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-x86_64-unknown-linux-gnu.tar.gz  # [linux and x86_64]
    sha256: 1307747915e8bd925f4d5396ab2ae3d8d9c7fad564afbc358c081683d0f22e87  # [linux and x86_64]
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-aarch64-unknown-linux-gnu.tar.xz  # [aarch64]
    sha256: e33789c7c32d89cbb939b2f58b7651c736cb9f37e42e11152cda7cc33df686a0  # [aarch64]
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-powerpc64le-unknown-linux-gnu.tar.gz  # [ppc64le]
    sha256: c5aedb12c552daa18072e386697205fb7b91cef1e8791fe6fb74834723851388  # [ppc64le]
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-x86_64-apple-darwin.tar.gz  # [osx and x86_64]
    sha256: 6c91ed3bd90253961fcb4a2991b8b22e042e2aaa9aba9f389f1e17008171d898  # [osx and x86_64]
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-aarch64-apple-darwin.tar.gz  # [osx and arm64]
    sha256: 3be74c31ee8dc4f1d49e2f2888228de374138eaeca1876d0c1b1a61df6023b3b  # [osx and arm64]
  - url: https://static.rust-lang.org/dist/rust-{{ version }}-x86_64-pc-windows-msvc.tar.gz  # [win64]
    sha256: 16bbc1a670b2c88e53d6ff64adc9e10af09e6c90b4628ad122827f1edd8b00fb  # [win64]
    patches:
      - 0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff
  # End of block of primary source files.
  - url: https://static.rust-lang.org/dist/rust-src-{{ version }}.tar.gz
    sha256: 3418db9b34921a8f8727da879b289456c0477c69ba63772be1955be8f15cdf0c
    folder: rust-src
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-aarch64-apple-ios.tar.gz  # [(linux or win) and x86_64]
    sha256: e53c7aa83f9af484158e80a82b1e8f2280179d8890133313a426f218bbf1a111  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-x86_64-apple-ios.tar.gz  # [(linux or win) and x86_64]
    sha256: 44a9cdadd59d95986ff50b6c7bdd83d6fed69358f58620e9321a2f00577fa95a  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-x86_64-pc-windows-msvc.tar.gz  # [(linux or win) and x86_64]
    sha256: 7a6550666ae64a6d8915bf18ec0a86e055c3a5f5074b3f88fe3d7ee57f3830c8  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-aarch64-apple-ios-sim.tar.gz  # [(linux or win) and x86_64]
    sha256: 83c9c0e7e2eb225c8c058618742d51cb05fa3c62ea8c8a005714cb47f472d1ea  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-aarch64-linux-android.tar.gz  # [(linux or win) and x86_64]
    sha256: 778bce559f0ee4aae179fb2e33170d8b16cea72ef47f5765e55b0cda383f2052  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-arm-linux-androideabi.tar.gz  # [(linux or win) and x86_64]
    sha256: 39c3cc67af7182e2a840b6d392f08539debe2e21b9827a1e20ff67fff0d82e99  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-armv7-linux-androideabi.tar.gz  # [(linux or win) and x86_64]
    sha256: 59351ce41b65f02bfa23f7a4a9912364b01ae3b4b0a7bfab20562727e74fca12  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-i686-linux-android.tar.gz  # [(linux or win) and x86_64]
    sha256: dbd07937d13df3ae2f4d79aca5087dcc9459355ce1a85abe325322472069a8df  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-x86_64-linux-android.tar.gz  # [(linux or win) and x86_64]
    sha256: d0ae7cea48e5dbf1799948f135ded1be243222754c995378f125374ce3bb44dc  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]
  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-wasm32-unknown-unknown.tar.gz  # [(linux or win) and x86_64]
    sha256: fe7fa3d7db7c1cc6482cf0644c19df79c97efb96441550739a25f0477b2bdcdb  # [(linux or win) and x86_64]
    folder: rust-std  # [(linux or win) and x86_64]

build:
  number: 0

requirements:
  build:
    - posix  # [win]
  host:

outputs:
  - name: rust-std-{{ rust_arch }}
    build:
      noarch: generic
      binary_relocation: false
      missing_dso_whitelist:   # [linux]
        - /lib64/librt.so.1  # [linux]
        - /lib64/libdl.so.2  # [linux]
        - /lib64/libpthread.so.0  # [linux]
        - /lib64/libm.so.6  # [linux]
        - /lib64/libc.so.6  # [linux]
        - /lib64/ld-linux-x86-64.so.2  # [linux]
      merge_build_host: false
    requirements:
      build:
        - posix  # [win]
      host:
      run:
        # The directory structure of windows and unix is different.
        # We should not install the bundled rust-std-x86_64-pc-windows-msvc from this output on unix for example.
        - __unix  # [unix]
        - __win  # [win]
      run_constrained:
        # Having different versions of rust-std and rust is confusing.
        - {{ pin_subpackage("rust", min_pin="x.x.x", max_pin="x.x.x") }}
    script: install-rust-std.sh  # [unix]
    script: install-rust-std.bat  # [win]
    test:
      commands:
        - test -d $PREFIX/lib/rustlib   # [unix]
        - if not exist %LIBRARY_PREFIX%/lib/rustlib exit 1  # [win]
        - echo {{ rust_arch }}

  - name: rust
    script: install-rust.sh  # [unix]
    script: install-rust.bat  # [win]
    build:
      # the distributed binaries are already relocatable
      binary_relocation: false
      missing_dso_whitelist:   # [linux]
        - /lib64/librt.so.1  # [linux]
        - /lib64/libdl.so.2  # [linux]
        - /lib64/libpthread.so.0  # [linux]
        - /lib64/libm.so.6  # [linux]
        - /lib64/libc.so.6  # [linux]
        - /lib64/ld-linux-x86-64.so.2  # [linux]
        # Added as run deps: libgcc-ng (via compiler strong run_exports), zlib
        # - /lib64/libgcc_s.so.1  # [linux]
        # - /lib64/libz.so.1  # [linux]
      run_exports:   # [osx and x86_64]
        strong_constrains:   # [osx and x86_64]
          - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default("10.9") }}  # [osx and x86_64]
    requirements:
      build:
        - posix  # [win]
      host:
        - {{ pin_subpackage("rust-std-" ~ rust_arch, exact=True) }}
        - {{ compiler('c') }}  # [linux] -- rustc needs a toolchain to link executables
        # zlib is linked by **/lib/libLLVM-*-rust-*.so
        - zlib  # [linux]
      run:
        - {{ pin_subpackage("rust-std-" ~ rust_arch, exact=True) }}
        - gcc_impl_{{ target_platform }}  # [linux]
    test:
      requires:
        - posix  # [win]
      commands:
        - rustc --help
        - rustdoc --help
        - cargo --help
        - cargo --config registries.crates-io.protocol=\"sparse\" install --force xsv
        - echo {{ rust_arch }}
        - if exist %LIBRARY_PREFIX%\share\doc\rust\html\sysroot exit 1  # [win]

  - name: rust-src
    script: install-rust-src.sh  # [unix]
    script: install-rust-src.bat  # [win]
    build:
      skip: {{ rust_arch != "x86_64-unknown-linux-gnu" and rust_arch != "x86_64-pc-windows-msvc" }}
      noarch: generic
      # Need conda-build >=3.25 to have different hashes. Remove when conda-build 3.25 is out.
      string: unix_{{ PKG_BUILDNUM }}  # [unix]
      string: win_{{ PKG_BUILDNUM }}  # [win]
    requirements:
      build:
        - posix  # [win]
      run:
        - __win   # [win]
        - __unix  # [unix]
      run_constrained:
        # Having different versions of rust-src and rust is confusing.
        # `rust-src` is specific to the toolchain in `rustup`,
        # and we would like to keep that behavior.
        - {{ pin_subpackage("rust", min_pin="x.x.x", max_pin="x.x.x") }}
    test:
      commands:
        - test -f "${PREFIX}"/lib/rustlib/src/rust/Cargo.lock  # [unix]
        - if not exist "%LIBRARY_PREFIX%/lib/rustlib/src/rust/Cargo.lock" exit 1  # [win]
        # Make sure that the outputs do not clobber with other rust components
        - test "$(ls "${PREFIX}"/lib/rustlib/)" = "$(printf "manifest-rust-src\nsrc")"  # [unix]
        - if not exist "%LIBRARY_PREFIX%/lib/rustlib/manifest-rust-src" exit 1  # [win]
        - if not exist "%LIBRARY_PREFIX%/lib/rustlib/src" exit 1  # [win]


  - name: rust-std-{{ rust_std_extra }}
    script: install-rust-std-extra.sh  # [unix]
    script: install-rust-std-extra.bat  # [win]
    build:
      skip: {{ rust_arch != "x86_64-unknown-linux-gnu" and rust_arch != "x86_64-pc-windows-msvc" }}
      noarch: generic
      # Need conda-build >=3.25 to have different hashes. Remove when conda-build 3.25 is out.
      string: unix_{{ PKG_BUILDNUM }}  # [unix]
      string: win_{{ PKG_BUILDNUM }}  # [win]
    requirements:
      build:
        - posix  # [win]
      run:
        - __win   # [win]
        - __unix  # [unix]
      run_constrained:
        # Having different versions of rust-std and rust is confusing.
        - {{ pin_subpackage("rust", min_pin="x.x.x", max_pin="x.x.x") }}
    test:
      commands:
        - test -d $PREFIX/lib/rustlib/{{ rust_std_extra }}  # [unix]
        - if not exist "%LIBRARY_PREFIX%/lib/rustlib/{{ rust_std_extra }}" exit 1  # [win]
        - test -f $PREFIX/lib/rustlib/manifest-rust-std-{{ rust_std_extra }}  # [unix]
        - if not exist "%LIBRARY_PREFIX%/lib/rustlib/manifest-rust-std-{{ rust_std_extra }}" exit 1  # [win]
        # Make sure that the outputs do not clobber with other rust components
        - test -z "$(ls "${PREFIX}"/lib/rustlib/ | grep -v {{ rust_std_extra }})"  # [unix]
        - dir /b "%LIBRARY_PREFIX%" | findstr /v "{{ rust_std_extra }}" >nul || exit 1  # [win]
        - echo {{ rust_std_extra }}

about:
  home: https://www.rust-lang.org
  license: MIT
  license_file:
    - LICENSE-APACHE
    - LICENSE-MIT
  summary: |
    Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.
    This package provides the compiler (rustc) and the documentation utilities rustdoc.
  dev_url: https://doc.rust-lang.org/std/
  doc_url: https://www.rust-lang.org/en-US/documentation.html

extra:
  recipe-maintainers:
    - timkpaine
    - xhochy
    - johanneskoester
    - abhi18av
    - pkgw
    - dlaehnemann
    - isuruf
    - mbargull
